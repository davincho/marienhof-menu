import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";

import pdf from "pdf-parse";

const Home: NextPage<{ days: string[][] }> = ({ days }) => {
  return (
    <div className="container mx-auto p-4">
      <Head>
        <title>🧑🏼‍🍳 Marienhof Menu</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <h1 className="text-3xl text-center">🧑🏼‍🍳 Marienhof Menu 🧑🏼‍🍳</h1>

      {days.map((day, index) => (
        <div key={index}>
          <pre>{JSON.stringify(day, null, 2)}</pre>
        </div>
      ))}
    </div>
  );
};

export const getServerSideProps: GetServerSideProps = async ({ req, res }) => {
  res.setHeader(
    "Cache-Control",
    "public, s-maxage=10, stale-while-revalidate=59"
  );

  const dataBuffer = await fetch(
    "http://www.restaurant-marienhof.at/restaurant/pdf/wochenmenue.pdf"
  );
  const blobContent = await dataBuffer.arrayBuffer();

  const weekdayStrings = [
    "Montag",
    "Dienstag",
    "Mittwoch",
    "Donnerstag",
    "Freitag",
  ];

  const weekdaysMenu = [];

  const data = (await pdf(Buffer.from(blobContent))) as { text: string };

  let weekdayCount = 0;

  let collector = [];
  let startCollecting = false;
  const lines = data.text
    .split("\n")
    .map((str) => str.trim().replace(/  +/g, " "))
    .filter(Boolean);

  for (const line of lines) {
    const weekdaySearch = weekdayStrings[weekdayCount];

    if (line === "Menüplan") {
      // Date info
      console.log(line);
    } else if (line.replaceAll(" ", "") === weekdaySearch) {
      if (collector.length > 0) {
        weekdaysMenu.push(collector);
      }

      collector = [];
      startCollecting = true;
      weekdayCount++;
    } else if (line.startsWith("V WOCHENEMPFEHLUNG")) {
      weekdaysMenu.push(collector);
      startCollecting = false;
    } else if (startCollecting) {
      collector.push(line);
    }
  }

  console.log("weekdaysMenu", weekdaysMenu);

  // fix some line breaks

  const fixedDays = weekdaysMenu.map((weekday) => {
    if (weekday.length === 3) {
      return weekday;
    }

    const fixedMenutItems = [];

    let concatMenu = [];

    for (const menu of weekday) {
      if (menu.indexOf("€") > -1) {
        if (concatMenu.length === 0) {
          fixedMenutItems.push(menu);
        } else {
          concatMenu.push(menu);
          fixedMenutItems.push(concatMenu.join(", "));
          concatMenu = [];
        }
      } else {
        concatMenu.push(menu);
      }
    }

    return fixedMenutItems;
  });

  return {
    props: { days: fixedDays },
  };
};

export default Home;
